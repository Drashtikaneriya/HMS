@model DataTable
@using System.Data
@using System.Linq
@using HMS.NewFolder

<h1 class="mb-4">User List</h1>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- ✅ Full width single line search form -->
<form asp-controller="User" asp-action="UserList" method="get" class="row g-2 align-items-center mb-3">

    <div class="col-md-3">
        <div class="input-group">
            <span class="input-group-text"><i class="bi bi-person"></i></span>
            <input type="text" name="name" value="@Context.Request.Query["name"]" class="form-control" placeholder="Name">
        </div>
    </div>

    <div class="col-md-3">
        <div class="input-group">
            <span class="input-group-text"><i class="bi bi-envelope"></i></span>
            <input type="text" name="email" value="@Context.Request.Query["email"]" class="form-control" placeholder="Email">
        </div>
    </div>

    <div class="col-md-3">
        <div class="input-group">
            <span class="input-group-text"><i class="bi bi-telephone"></i></span>
            <input type="text" name="mobileNo" value="@Context.Request.Query["mobileNo"]" class="form-control" placeholder="Mobile No">
        </div>
    </div>
    <br />
    <br />
    <br />
    <!-- ✅ Button same height as inputs -->
    <div class="col-md-3">
        <div class="input-group">
            <button type="submit" class="btn btn-outline-primary">
                <i class="bi bi-search"></i> Search
            </button>
        </div>
    </div>

    @{
        // Count Active and Inactive users
        int activeUsers = Model.AsEnumerable().Count(r => Convert.ToBoolean(r["IsActive"]));
        int inactiveUsers = Model.AsEnumerable().Count(r => !Convert.ToBoolean(r["IsActive"]));
    }

    <!-- ✅ Active/Inactive Users small badges -->
    <div class="d-flex gap-2 mb-3">
        <div class="badge bg-success d-flex align-items-center gap-1 p-2">
            <i class="bi bi-check-circle"></i> Active: @activeUsers
        </div>
        <div class="badge bg-danger d-flex align-items-center gap-1 p-2">
            <i class="bi bi-x-circle"></i> Inactive: @inactiveUsers
        </div>
    </div>
   
</form>



@* 

<!-- ✅ Search Form -->
<form asp-controller="User" asp-action="UserList" method="get"
      class="d-flex align-items-center gap-2 shadow-sm p-2 rounded bg-light w-50">

    <!-- Name -->
    <div class="input-group">
        <span class="input-group-text">
            <i class="bi bi-person"></i>
        </span>
        <input type="text" name="name" value="@Context.Request.Query["name"]"
               class="form-control" placeholder="Name">
    </div>

    <!-- Email -->
    <div class="input-group">
        <span class="input-group-text">
            <i class="bi bi-envelope"></i>
        </span>
        <input type="text" name="email" value="@Context.Request.Query["email"]"
               class="form-control" placeholder="Email">
    </div>

    <!-- Mobile -->
    <div class="input-group">
        <span class="input-group-text">
            <i class="bi bi-telephone"></i>
        </span>
        <input type="text" name="mobileNo" value="@Context.Request.Query["mobileNo"]"
               class="form-control" placeholder="Mobile No">
    </div>

    <!-- Search button -->
    <button type="submit" class="btn btn-outline-primary d-flex align-items-center gap-1">
        <i class="bi bi-search"></i>
        <span>Search</span>
    </button>
</form>
@{
    // Count Active and Inactive users
    int activeUsers = Model.AsEnumerable().Count(r => Convert.ToBoolean(r["IsActive"]));
    int inactiveUsers = Model.AsEnumerable().Count(r => !Convert.ToBoolean(r["IsActive"]));
}

<div class="row g-4 mb-3">
    <!-- Active Users -->
    <div class="col-md-2">
        <div class="card shadow-sm border-0 rounded-3 text-center p-3" style="background:#d4edda;">
            <i class="bi bi-check-circle fs-3 text-success"></i>
            <h4 class="fw-bold mt-2">@activeUsers</h4>
            <p class="mb-0 text-success">Active Users</p>
        </div>
    </div>

    <!-- Inactive Users -->
    <div class="col-md-2">
        <div class="card shadow-sm border-0 rounded-3 text-center p-3" style="background:#f8d7da;">
            <i class="bi bi-x-circle fs-3 text-danger"></i>
            <h4 class="fw-bold mt-2">@inactiveUsers</h4>
            <p class="mb-0 text-danger">Inactive Users</p>
        </div>
    </div>
</div> *@

<!-- ✅ Buttons -->
<div class="d-flex justify-content-between mb-3">
    <div>
        @* <a class="btn btn-success me-2" href="/user/ExportToCSV">⬇️ Download CSV</a> *@
        <a class="btn btn-success me-2" href="/User/ExportToExcel">📂 Download Excel</a>
        <a class="btn btn-primary" href="/User/UserAddEdit">➕ Add User</a>
    </div>
    <div>
        <a class="btn btn-secondary me-2" asp-controller="Dashboard" asp-action="Index">🏠 Go to Dashboard</a>
        <button type="button" class="btn btn-danger" onclick="confirmDeleteSelected()">🗑 Delete Selected Users</button>
    </div>
</div>


<!-- ✅ TempData Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-2" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-2" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- ✅ User Table -->
<form id="deleteSelectedForm" asp-controller="User" asp-action="DeleteSelectedUsers" method="post">
    <table class="table table-bordered table-hover shadow-sm">
        <thead class="table-primary">
            <tr>
                <th><input type="checkbox" id="selectAll" /></th>
                <th>UserId</th>
                <th>User Name</th>
                <th>Email</th>
                <th>IsActive</th>
                <th>Created</th>
                <th>Status</th>
                <th>Modified</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (DataRow dr in Model.Rows)
            {
                <tr>
                    <td>
                        <input type="checkbox" name="SelectedUserIds" value="@dr["UserID"]" class="selectCheckbox" />
                    </td>
                    <td>@dr["UserID"]</td>
                    <td>@dr["UserName"]</td>
                    <td>@dr["Email"]</td>
                    <td>@dr["IsActive"]</td>
                    <td>@Convert.ToDateTime(dr["Created"]).ToString("yyyy-MM-dd")</td>
                    <td>
                        @if (Convert.ToBoolean(dr["IsActive"]))
                        {
                            <span class="badge bg-success">Active</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Not Active</span>
                        }
                    </td>
                    <td>@Convert.ToDateTime(dr["Modified"]).ToString("yyyy-MM-dd")</td>
                    <td>
                        @* <a asp-controller="User" asp-action="UserForm" asp-route-ID="@dr["UserID"]"
                           class="btn btn-primary btn-sm me-1">Edit</a> *@
                        @* <a asp-controller="User"
                           asp-action="UserForm"
                           asp-route-ID="@UrlEncryptor.Encrypt(dr["UserID"].ToString())"
                           class="btn btn-primary btn-sm me-1">
                              Edit
                        </a> *@
                        <a asp-controller="User"
                           asp-action="UserForm"
                           asp-route-ID="@UrlEncryptor.Encrypt(dr["UserID"].ToString())"
                           class="btn btn-primary btn-sm me-1">Edit</a>

                        <button type="button" class="btn btn-danger btn-sm"
                                onclick="confirmDelete('@UrlEncryptor.Encrypt(dr["UserID"].ToString())', '@dr["UserName"]')">
                            Delete
                        </button>

                    </td>
                </tr>
            }
        </tbody>
    </table>
</form>

<!-- ✅ Pagination Controls -->
<nav>
    <ul class="pagination justify-content-center">
        @{
            int totalItems = ViewBag.TotalItems;
            int pageSize = ViewBag.PageSize;
            int pageNumber = ViewBag.PageNumber;
            int totalPages = (int)Math.Ceiling((double)totalItems / pageSize);

            if (totalPages > 1)
            {
                for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == pageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("UserList", new { page = i, searchTerm = ViewBag.SearchTerm })">@i</a>
                    </li>
                }
            }
        }
    </ul>
</nav>

<script>
    function confirmDelete(userId, userName) {
        Swal.fire({
            title: 'Are you sure?',
            text: `Do you really want to delete user "${userName}"?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = `/User/UserDelete?UserID=${userId}`;
            }
        });
    }

    document.getElementById("selectAll").addEventListener("change", function () {
        let checkboxes = document.querySelectorAll(".selectCheckbox");
        checkboxes.forEach(chk => chk.checked = this.checked);
    });

    function confirmDeleteSelected() {
        let selected = document.querySelectorAll(".selectCheckbox:checked");
        if (selected.length === 0) {
            Swal.fire('No Users Selected', 'Please select at least one user to delete.', 'info');
            return;
        }
        Swal.fire({
            title: 'Delete Selected Users?',
            text: '⚠️ This will permanently remove selected users from the system!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Yes, delete selected!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                document.getElementById('deleteSelectedForm').submit();
            }
        });
    }
</script>
